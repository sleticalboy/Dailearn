#include <vector>
{imported-headers}
#include "../../../../AlgoBase/commonAI/src/main/jni/XYAIStructExchange.h"
#include "../../../../AlgoBase/commonAI/src/main/jni/method_tracer.h"

#include <android/log.h>

#define TAG "{module-name}"

{algo-nss}

{convert-methods}

{jni-methods}

JNINativeMethod g{module-name}Methods[] = {
  {jni-register-methods}
};

jint JNI_OnLoad(JavaVM *vm, void *reserved) {
  JNIEnv *env = nullptr;
  int res = vm->GetEnv((void **) &env, JNI_VERSION_1_6);
  if (res != JNI_OK || env == nullptr) {
    return JNI_ERR;
  }
  register_classes(env);
  jclass clazz = env->FindClass("com/quvideo/mobile/component/{pkg-name}/Q{module-name}");
  env->RegisterNatives(clazz, g{module-name}Methods, sizeof(g{module-name}Methods) / sizeof(JNINativeMethod));
  env->DeleteLocalRef(clazz);
  return JNI_VERSION_1_6;
}

void JNI_OnUnload(JavaVM *vm, void *reserved) {
  JNIEnv *env = nullptr;
  int res = vm->GetEnv((void **) &env, JNI_VERSION_1_6);
  if (res != JNI_OK || env == nullptr) {
    return;
  }
  jclass clazz = env->FindClass("com/quvideo/mobile/component/{pkg-name}/Q{module-name}");
  env->UnregisterNatives(clazz);
  env->DeleteLocalRef(clazz);
}